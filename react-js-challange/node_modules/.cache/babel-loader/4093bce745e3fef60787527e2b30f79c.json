{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielgomes/dev/projetos/rocketseat/react-js-conceps/react-js-concepts/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    async function loadRepository() {\n      api.get('repositories');\n      setRepositories(response.data);\n      console.log(response.data);\n      console.log(repositories);\n    }\n  }, []);\n\n  async function handleAddRepository() {\n    const response = api.post('repositories', {\n      title: `Novo Repositorio ${Date.now()}`\n    });\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n    console.log(repositories);\n  }\n\n  async function handleRemoveRepository(id) {\n    console.log('id -->', id); //const response = api.delete('repositories')\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, repository.title))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gabrielgomes/dev/projetos/rocketseat/react-js-conceps/react-js-concepts/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","loadRepository","get","response","data","console","log","handleAddRepository","post","title","Date","now","repository","handleRemoveRepository","id","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAGA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeK,cAAf,GAAgC;AAC9BJ,MAAAA,GAAG,CAACK,GAAJ,CAAQ,cAAR;AACAF,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAED;AACF,GARQ,EAQN,EARM,CAAT;;AAWA,iBAAeQ,mBAAf,GAAqC;AACnC,UAAMJ,QAAQ,GAAGN,GAAG,CAACW,IAAJ,CAAS,cAAT,EAAyB;AACxCC,MAAAA,KAAK,EAAG,oBAAmBC,IAAI,CAACC,GAAL,EAAW;AADE,KAAzB,CAAjB;AAIA,UAAMC,UAAU,GAAGT,QAAQ,CAACC,IAA5B;AACAJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBa,UAAlB,CAAD,CAAf;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAED;;AAED,iBAAec,sBAAf,CAAsCC,EAAtC,EAA0C;AACxCT,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,EAAtB,EADwC,CAExC;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIf,YAAY,CAACgB,GAAb,CAAiBH,UAAU,iBAEzB;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,UAAU,CAACH,KAApC,CAFF,CAHJ,CADF,eAcE;AAAQ,IAAA,OAAO,EAAEF,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,CADF;AAkBD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport api from './services/api';\n\nimport \"./styles.css\";\n\n\nfunction App() {\n\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    async function loadRepository() {\n      api.get('repositories')\n      setRepositories(response.data)\n      console.log(response.data);\n      console.log(repositories);\n\n    }\n  }, []);\n\n\n  async function handleAddRepository() {\n    const response = api.post('repositories', {\n      title: `Novo Repositorio ${Date.now()}`\n    });\n\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n\n    console.log(repositories);\n\n  }\n\n  async function handleRemoveRepository(id) {\n    console.log('id -->', id);\n    //const response = api.delete('repositories')\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n\n        {\n          repositories.map(repository => (\n\n            <li key={repository.id}>{repository.title}\n            </li>\n\n          ))\n        }\n\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}